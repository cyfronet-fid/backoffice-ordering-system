// This file is auto-generated by @hey-api/openapi-ts

export type HttpValidationError = {
  detail?: Array<ValidationError>;
};

export type Message = {
  id?: number | null;
  created_at?: string;
  content: string;
  author_id?: number | null;
  order_id?: number | null;
};

export type Order = {
  id?: number | null;
  created_at?: string;
  updated_at?: string;
  external_ref: string;
  project_ref: string;
  status?: OrderStatus;
  config: {
    [key: string]: unknown;
  };
  platforms: Array<string>;
  resource_ref: string;
  resource_type: string;
  resource_name: string;
};

export type OrderStatus =
  | "submitted"
  | "on_hold"
  | "processing"
  | "completed"
  | "rejected"
  | "cancelled";

export type Provider = {
  id?: number | null;
  created_at?: string;
  name: string;
  website: string;
};

export type User = {
  id?: number | null;
  created_at?: string;
  updated_at?: string;
  email: string;
  user_type: Array<UserType>;
};

export type UserType = "mp_user" | "provider_manager" | "coordinator" | "admin";

export type ValidationError = {
  loc: Array<string | number>;
  msg: string;
  type: string;
};

export type ReadOrdersData = {
  body?: never;
  path?: never;
  query?: never;
  url: "/orders/";
};

export type ReadOrdersResponses = {
  /**
   * Successful Response
   */
  200: Array<Order>;
};

export type ReadOrdersResponse = ReadOrdersResponses[keyof ReadOrdersResponses];

export type ReadUsersData = {
  body?: never;
  path?: never;
  query?: never;
  url: "/users/";
};

export type ReadUsersResponses = {
  /**
   * Successful Response
   */
  200: Array<User>;
};

export type ReadUsersResponse = ReadUsersResponses[keyof ReadUsersResponses];

export type GetUserByIdData = {
  body?: never;
  path: {
    user_id: number;
  };
  query?: never;
  url: "/users/{user_id}";
};

export type GetUserByIdErrors = {
  /**
   * Validation Error
   */
  422: HttpValidationError;
};

export type GetUserByIdError = GetUserByIdErrors[keyof GetUserByIdErrors];

export type GetUserByIdResponses = {
  /**
   * Successful Response
   */
  200: User;
};

export type GetUserByIdResponse =
  GetUserByIdResponses[keyof GetUserByIdResponses];

export type ReadProvidersData = {
  body?: never;
  path?: never;
  query?: never;
  url: "/providers/";
};

export type ReadProvidersResponses = {
  /**
   * Successful Response
   */
  200: Array<Provider>;
};

export type ReadProvidersResponse =
  ReadProvidersResponses[keyof ReadProvidersResponses];

export type ReadMessagesData = {
  body?: never;
  path?: never;
  query?: never;
  url: "/messages/";
};

export type ReadMessagesResponses = {
  /**
   * Successful Response
   */
  200: Array<Message>;
};

export type ReadMessagesResponse =
  ReadMessagesResponses[keyof ReadMessagesResponses];

export type ReadRootGetData = {
  body?: never;
  path?: never;
  query?: never;
  url: "/";
};

export type ReadRootGetResponses = {
  /**
   * Successful Response
   */
  200: {
    [key: string]: string;
  };
};

export type ReadRootGetResponse =
  ReadRootGetResponses[keyof ReadRootGetResponses];
